apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cosanet
  labels:
    app: cosanet
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9156'
spec:
  selector:
    matchLabels:
      app: cosanet
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9156'
      labels:
        app: cosanet
    spec:
      hostPID: true
      containers:
      - name: cosanet
        image: ghcr.io/cosanet/cosanet:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 9156
          name: metrics
          protocol: TCP
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          privileged: true
        volumeMounts:
        - name: containerd-sock
          mountPath: /run/containerd/containerd.sock
          readOnly: true
        - name: host-netns
          mountPath: /var/run/netns
          readOnly: true
          mountPropagation: HostToContainer
        - name: host-proc
          mountPath: /host/proc
          readOnly: true
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
      volumes:
      - name: containerd-sock
        hostPath:
          path: /run/containerd/containerd.sock
          type: Socket
      - name: host-netns
        hostPath:
          path: /var/run/netns
          type: DirectoryOrCreate
      - name: host-proc
        hostPath:
          path: /proc
          type: Directory
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      - operator: Exists
